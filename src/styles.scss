@charset "UTF-8";
@use "sass:math";

@import "keyframes";

$bg-size: 25vmin;
$speed: 1s;
$size: 20vmin;

:root {
  --oct-1: 322deg;
  --oct-2: 16deg;
  --oct-3: 181deg;
}
html,
body {
  height: 100%;
}

body {
  align-items: center;
  animation: down $speed linear infinite paused;
  background-color: midnightblue;
  background-image: radial-gradient(
      circle at $bg-size * 0.75 0,
      transparent,
      transparent math.div($bg-size, 4),
      rgba(cyan, 0.1) math.div($bg-size, 4),
      rgba(cyan, 0.1) math.div($bg-size, 2),
      transparent math.div($bg-size, 2)
    ),
    radial-gradient(
      circle at $bg-size * 1.5 $bg-size * 0.9,
      transparent,
      transparent math.div($bg-size, 4),
      rgba(cyan, 0.1) math.div($bg-size, 4),
      rgba(cyan, 0.1) math.div($bg-size, 2),
      transparent math.div($bg-size, 2)
    ),
    radial-gradient(
      circle at 0 $bg-size * 0.9,
      transparent,
      transparent math.div($bg-size, 4),
      rgba(cyan, 0.1) math.div($bg-size, 4),
      rgba(cyan, 0.1) math.div($bg-size, 2),
      transparent math.div($bg-size, 2)
    );
  background-position: center math.div($bg-size, 2);
  background-size: $bg-size * 1.5 $bg-size * 0.9;
  display: flex;
  justify-content: center;
  margin: 0;
  overflow: hidden;
}
.🐙 {
  --hue: 100deg;
  animation: bounce $speed infinite alternate paused;
  aspect-ratio: 1/1;
  background-image: radial-gradient(
    circle at center 30%,
    rgba(255, 255, 255, 0.125),
    rgba(255, 255, 255, 0) 33%
  );
  border-radius: 100%;
  box-shadow: inset 0 $size * 0.08 $size * 0.08 rgba(black, 0.125);
  flex: 0 0 auto;
  margin-top: math.div($size, -5);
  position: absolute;
  width: $size;
  &::before {
    background-image:
      // highlight
      radial-gradient(
        circle at 18.75% 37.5%,
        #fffc $size * 0.02,
        transparent $size * 0.022
      ),
      radial-gradient(
        circle at 81.25% 37.5%,
        #fffc $size * 0.02,
        transparent $size * 0.022
      ),
      // pupils
      radial-gradient(
          circle at 18.75% center,
          #000 $size * 0.095,
          transparent $size * 0.1
        ),
      radial-gradient(
        circle at 81.25% center,
        #000 $size * 0.095,
        transparent $size * 0.1
      ),
      // under pupil gradient
      radial-gradient(
          circle at 18.75% 53.33%,
          #fff5 $size * 0.09,
          transparent 2vmin
        ),
      radial-gradient(
        circle at 81.25% 53.33%,
        #fff5 $size * 0.09,
        transparent 2vmin
      ),
      // sockets
      radial-gradient(
          circle at 18.75% center,
          hwb(var(--hue) 0% 20%) $size * 0.11,
          hwb(var(--hue) 0% 30%) $size * 0.146,
          hwb(var(--hue) 0% 30%) $size * 0.148,
          transparent $size * 0.15
        ),
      radial-gradient(
        circle at 81.25% center,
        hwb(var(--hue) 0% 20%) $size * 0.11,
        hwb(var(--hue) 0% 30%) $size * 0.146,
        hwb(var(--hue) 0% 30%) $size * 0.148,
        transparent $size * 0.15
      );
  }
}
.🐙,
.🐙 .arm {
  background-color: hwb(var(--hue) 0% 10%);
}
.🐙 .arm::before,
.🐙 .arm::after {
  background-color: hwb(var(--hue) 25% 10%);
  box-shadow: inset 0.4vmin 0 0 hwb(var(--hue) 0% 50%);
}
.🐙 .arm:nth-child(n + 5)::before,
.🐙 .arm:nth-child(n + 5)::after {
  box-shadow: inset -0.4vmin 0 0 hwb(var(--hue) 0% 50%);
}
.🐙 .arm:first-child,
.🐙 .arm:nth-child(8),
.🐙 .arm:nth-child(2),
.🐙 .arm:nth-child(7) {
  background-color: hwb(var(--hue) 0% 30%);
}
.🐙 .arm:first-child::before,
.🐙 .arm:first-child::after,
.🐙 .arm:nth-child(8)::before,
.🐙 .arm:nth-child(8)::after,
.🐙 .arm:nth-child(2)::before,
.🐙 .arm:nth-child(2)::after,
.🐙 .arm:nth-child(7)::before,
.🐙 .arm:nth-child(7)::after {
  background-color: hwb(var(--hue) 0% 10%);
}
.🐙 .arm:first-child::before,
.🐙 .arm:first-child::after,
.🐙 .arm:nth-child(2)::before,
.🐙 .arm:nth-child(2)::after {
  box-shadow: inset 0.4vmin 0 0 hwb(var(--hue) 0% 70%);
}
.🐙 .arm:nth-child(8)::before,
.🐙 .arm:nth-child(8)::after,
.🐙 .arm:nth-child(7)::before,
.🐙 .arm:nth-child(7)::after {
  box-shadow: inset -0.4vmin 0 0 hwb(var(--hue) 0% 70%);
}
.🐙:nth-child(1) {
  /* background-color: mediumvioletred; */
  --hue: var(--oct-1);
}
.🐙:nth-child(2) {
  /* background-color: orangered; */
  --hue: var(--oct-2);
  left: 20%;
  top: 20%;
}
.🐙:nth-child(3) {
  /* background-color: darkturquoise; */
  --hue: var(--oct-3);
  right: 15%;
  top: 33%;
}
.🐙:first-child {
  top: calc(50% + 10vmin);
}
.🐙::before {
  height: 30%;
  width: 80%;
  bottom: 20%;
  content: "";
  left: 10%;
  position: absolute;
}

.⚪️ {
  animation: float 5s linear infinite paused;
  background-image: radial-gradient(
      circle at 3vmin 3vmin,
      transparent calc(3vmin - 4px),
      rgba(255, 255, 255, 0.8) calc(3vmin - 3px),
      rgba(255, 255, 255, 0.8) calc(3vmin - 1px),
      transparent 3vmin
    ),
    radial-gradient(
      circle at 9vmin 9vmin,
      transparent calc(2vmin - 4px),
      rgba(255, 255, 255, 0.8) calc(2vmin - 3px),
      rgba(255, 255, 255, 0.8) calc(2vmin - 1px),
      transparent 2vmin
    ),
    radial-gradient(
      circle at 3vmin 15vmin,
      transparent calc(1vmin - 4px),
      rgba(255, 255, 255, 0.8) calc(1vmin - 3px),
      rgba(255, 255, 255, 0.8) calc(1vmin - 1px),
      transparent 1vmin
    );
  height: 20vmin;
  right: 8vmin;
  position: absolute;
  top: 10vmin;
  width: 20vmin;
  z-index: -2;
}
.⚪️ + .⚪️ {
  animation-delay: 2s;
  bottom: 10vmin;
  left: 10vmin;
  top: calc(100% + 20vmin);
}
@keyframes float {
  from {
    background-position: 0 0;
    top: calc(100% + 20vmin);
    transform: scale(1);
  }
  50% {
    background-position: 5vmin 5vmin, 7vmin 8vmin, 5vmin 0;
    transform: scale(2);
  }
  to {
    background-position: 0 0;
    top: -20vmin;
    transform: scale(1.5);
  }
}
.arm {
  animation: 0.5s linear infinite alternate paused;
  border-radius: 100px;
  bottom: 0;
  height: 32%;
  position: absolute;
  right: 50%;
  transform-origin: center;
  width: 16%;
  z-index: -1;
}
.arm::before,
.arm::after {
  border-radius: 100%;
  bottom: 12.5%;
  content: "";
  height: 1vmin;
  position: absolute;
  right: 0;
  width: 1vmin;
}
.arm::after {
  bottom: 2.4vmin;
}
.arm {
  background-image: linear-gradient(rgba(0, 0, 0, 0.25), transparent 67%),
    linear-gradient(to left, rgba(0, 0, 0, 0.25) 50%, transparent 50%);
}
.arm:nth-child(n + 5) {
  background-image: linear-gradient(rgba(0, 0, 0, 0.25), transparent 67%),
    linear-gradient(to right, rgba(0, 0, 0, 0.25) 50%, transparent 50%);
  left: 50%;
}
.arm:nth-child(n + 5)::before,
.arm:nth-child(n + 5)::after {
  left: 0;
}

@import "arms";

.toggle {
  color: #fff;
  cursor: pointer;
  font-family: monospace;
  padding: 0.5rem;
  position: absolute;
  top: 1vmin;
  left: 1vmin;
}
.toggle + .toggle {
  left: auto;
  right: 1vmin;
}
.toggle:focus-within {
  background-color: hwb(322deg 0% 20%);
  border-radius: 100px;
}
.toggle::after {
  content: "off";
  font-weight: bold;
  text-decoration: underline;
}
.toggle:has(input:checked)::after {
  content: "on";
}
.toggle input {
  height: 0;
  margin: 0;
  opacity: 0;
  width: 0;
}
a {
  border-radius: 1rem;
  color: #fff;
  font-family: monospace;
  padding: 0.5rem 1rem;
  position: absolute;
  text-decoration: none;
  transition: background-color 0.5s;
}
.link {
  left: 0;
  margin: auto;
  right: 0;
  text-align: center;
  top: 1vmin;
  width: 12ch;
}
.link:hover {
  background-color: orangered;
}
.viv {
  bottom: 1vmin;
}
.viv:hover {
  background-color: #078;
}
/* Animate */
body:has(#animate:checked),
body:has(#animate:checked) .🐙,
body:has(#animate:checked) .⚪️,
body:has(#animate:checked) .arm {
  animation-play-state: running;
}
input[type="range"] {
  appearance: none;
  background-image: linear-gradient(
    to right,
    hwb(0deg 0% 0%),
    hwb(36deg 0% 0%),
    hwb(72deg 0% 0%),
    hwb(108deg 0% 0%),
    hwb(144deg 0% 0%),
    hwb(180deg 0% 0%),
    hwb(216deg 0% 0%),
    hwb(252deg 0% 0%),
    hwb(288deg 0% 0%),
    hwb(324deg 0% 0%),
    hwb(360deg 0% 0%)
  );
  border-radius: 100px;
  left: -25%;
  opacity: 0;
  position: absolute;
  top: -2rem;
  width: 150%;
}
label:focus-within input[type="range"],
input[type="range"]:focus {
  opacity: 1;
}
h1 {
  font-size: 0.8125rem;
  font-weight: 400;
  line-height: 1;
  margin: 0;
}
